db.zips.aggregate([
    {$match:
     {
	 state:"NY"
     }
    },
    {$group:
     {
	 _id: "$city",
	 population: {$sum:"$pop"},
     }
    },
    {$project:
     {
	 _id: 0,
	 city: "$_id",
	 population: 1,
     }
    },
    {$sort:
     {
	 population:-1
     }
    },
    {$limit: 5},
    {$skip: 10} 
])

$skip: de ondo o mongo começa a contatar

nosso caso a cima ele vai trazer cinco linhas a partir da 10 linha.

Chame o método cursor.skip () em um cursor para controlar onde MongoDB começa retornando resultados . 
Esta abordagem pode ser útil na implementação dos resultados " paginada " .


function printStudents(pageNumber, nPerPage) {
   print("Page: " + pageNumber);
   db.students.find().skip(pageNumber > 0 ? ((pageNumber-1)*nPerPage) : 0).limit(nPerPage).forEach( function(student) { print(student.name + "<p>"); } );
}


skip(5)->limit(10);
os cinco primeiros itens serão desprezado, apenas os 10 depois do quinto serão retornado.
mas o mongo terá que percorer os 15 numeros.